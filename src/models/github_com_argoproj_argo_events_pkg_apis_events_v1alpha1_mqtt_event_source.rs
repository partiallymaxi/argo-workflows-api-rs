/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GithubComArgoprojArgoEventsPkgApisEventsV1alpha1MqttEventSource {
    #[serde(rename = "auth", skip_serializing_if = "Option::is_none")]
    pub auth: Option<Box<models::GithubComArgoprojArgoEventsPkgApisEventsV1alpha1BasicAuth>>,
    #[serde(rename = "clientId", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<String>,
    #[serde(rename = "connectionBackoff", skip_serializing_if = "Option::is_none")]
    pub connection_backoff: Option<Box<models::GithubComArgoprojArgoEventsPkgApisEventsV1alpha1Backoff>>,
    #[serde(rename = "filter", skip_serializing_if = "Option::is_none")]
    pub filter: Option<Box<models::GithubComArgoprojArgoEventsPkgApisEventsV1alpha1EventSourceFilter>>,
    #[serde(rename = "jsonBody", skip_serializing_if = "Option::is_none")]
    pub json_body: Option<bool>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "tls", skip_serializing_if = "Option::is_none")]
    pub tls: Option<Box<models::GithubComArgoprojArgoEventsPkgApisEventsV1alpha1TlsConfig>>,
    #[serde(rename = "topic", skip_serializing_if = "Option::is_none")]
    pub topic: Option<String>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
}

impl GithubComArgoprojArgoEventsPkgApisEventsV1alpha1MqttEventSource {
    pub fn new() -> GithubComArgoprojArgoEventsPkgApisEventsV1alpha1MqttEventSource {
        GithubComArgoprojArgoEventsPkgApisEventsV1alpha1MqttEventSource {
            auth: None,
            client_id: None,
            connection_backoff: None,
            filter: None,
            json_body: None,
            metadata: None,
            tls: None,
            topic: None,
            url: None,
        }
    }
}

