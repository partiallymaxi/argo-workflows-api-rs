/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GithubComArgoprojArgoEventsPkgApisEventsV1alpha1ResourceEventSource : ResourceEventSource refers to a event-source for K8s resource related events.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GithubComArgoprojArgoEventsPkgApisEventsV1alpha1ResourceEventSource {
    /// EventTypes is the list of event type to watch. Possible values are - ADD, UPDATE and DELETE.
    #[serde(rename = "eventTypes", skip_serializing_if = "Option::is_none")]
    pub event_types: Option<Vec<String>>,
    #[serde(rename = "filter", skip_serializing_if = "Option::is_none")]
    pub filter: Option<Box<models::GithubComArgoprojArgoEventsPkgApisEventsV1alpha1ResourceFilter>>,
    #[serde(rename = "groupVersionResource", skip_serializing_if = "Option::is_none")]
    pub group_version_resource: Option<Box<models::IoK8sApimachineryPkgApisMetaV1GroupVersionResource>>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "namespace", skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
}

impl GithubComArgoprojArgoEventsPkgApisEventsV1alpha1ResourceEventSource {
    /// ResourceEventSource refers to a event-source for K8s resource related events.
    pub fn new() -> GithubComArgoprojArgoEventsPkgApisEventsV1alpha1ResourceEventSource {
        GithubComArgoprojArgoEventsPkgApisEventsV1alpha1ResourceEventSource {
            event_types: None,
            filter: None,
            group_version_resource: None,
            metadata: None,
            namespace: None,
        }
    }
}

