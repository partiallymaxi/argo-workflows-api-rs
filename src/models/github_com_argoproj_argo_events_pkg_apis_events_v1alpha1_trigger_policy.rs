/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GithubComArgoprojArgoEventsPkgApisEventsV1alpha1TriggerPolicy {
    #[serde(rename = "k8s", skip_serializing_if = "Option::is_none")]
    pub k8s: Option<Box<models::GithubComArgoprojArgoEventsPkgApisEventsV1alpha1K8SResourcePolicy>>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Box<models::GithubComArgoprojArgoEventsPkgApisEventsV1alpha1StatusPolicy>>,
}

impl GithubComArgoprojArgoEventsPkgApisEventsV1alpha1TriggerPolicy {
    pub fn new() -> GithubComArgoprojArgoEventsPkgApisEventsV1alpha1TriggerPolicy {
        GithubComArgoprojArgoEventsPkgApisEventsV1alpha1TriggerPolicy {
            k8s: None,
            status: None,
        }
    }
}

