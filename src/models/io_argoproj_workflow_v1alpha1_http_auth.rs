/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoArgoprojWorkflowV1alpha1HttpAuth {
    #[serde(rename = "basicAuth", skip_serializing_if = "Option::is_none")]
    pub basic_auth: Option<Box<models::IoArgoprojWorkflowV1alpha1BasicAuth>>,
    #[serde(rename = "clientCert", skip_serializing_if = "Option::is_none")]
    pub client_cert: Option<Box<models::IoArgoprojWorkflowV1alpha1ClientCertAuth>>,
    #[serde(rename = "oauth2", skip_serializing_if = "Option::is_none")]
    pub oauth2: Option<Box<models::IoArgoprojWorkflowV1alpha1OAuth2Auth>>,
}

impl IoArgoprojWorkflowV1alpha1HttpAuth {
    pub fn new() -> IoArgoprojWorkflowV1alpha1HttpAuth {
        IoArgoprojWorkflowV1alpha1HttpAuth {
            basic_auth: None,
            client_cert: None,
            oauth2: None,
        }
    }
}

