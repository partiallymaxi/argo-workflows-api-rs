/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

use serde_with::serde_as;

/// IoArgoprojWorkflowV1alpha1HttpBodySource : HTTPBodySource contains the source of the HTTP body.
#[serde_as]
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoArgoprojWorkflowV1alpha1HttpBodySource {
    #[serde_as(as = "Option<serde_with::base64::Base64>")]
    #[serde(rename = "bytes", skip_serializing_if = "Option::is_none")]
    pub bytes: Option<Vec<u8>>,
}

impl IoArgoprojWorkflowV1alpha1HttpBodySource {
    /// HTTPBodySource contains the source of the HTTP body.
    pub fn new() -> IoArgoprojWorkflowV1alpha1HttpBodySource {
        IoArgoprojWorkflowV1alpha1HttpBodySource {
            bytes: None,
        }
    }
}

