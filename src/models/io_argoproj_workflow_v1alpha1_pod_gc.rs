/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoArgoprojWorkflowV1alpha1PodGc : PodGC describes how to delete completed pods as they complete
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoArgoprojWorkflowV1alpha1PodGc {
    /// DeleteDelayDuration specifies the duration before pods in the GC queue get deleted.
    #[serde(rename = "deleteDelayDuration", skip_serializing_if = "Option::is_none")]
    pub delete_delay_duration: Option<String>,
    #[serde(rename = "labelSelector", skip_serializing_if = "Option::is_none")]
    pub label_selector: Option<Box<models::IoK8sApimachineryPkgApisMetaV1LabelSelector>>,
    /// Strategy is the strategy to use. One of \"OnPodCompletion\", \"OnPodSuccess\", \"OnWorkflowCompletion\", \"OnWorkflowSuccess\". If unset, does not delete Pods
    #[serde(rename = "strategy", skip_serializing_if = "Option::is_none")]
    pub strategy: Option<String>,
}

impl IoArgoprojWorkflowV1alpha1PodGc {
    /// PodGC describes how to delete completed pods as they complete
    pub fn new() -> IoArgoprojWorkflowV1alpha1PodGc {
        IoArgoprojWorkflowV1alpha1PodGc {
            delete_delay_duration: None,
            label_selector: None,
            strategy: None,
        }
    }
}

