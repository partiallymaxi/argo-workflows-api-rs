/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoArgoprojWorkflowV1alpha1VolumeClaimGc : VolumeClaimGC describes how to delete volumes from completed Workflows
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoArgoprojWorkflowV1alpha1VolumeClaimGc {
    /// Strategy is the strategy to use. One of \"OnWorkflowCompletion\", \"OnWorkflowSuccess\". Defaults to \"OnWorkflowSuccess\"
    #[serde(rename = "strategy", skip_serializing_if = "Option::is_none")]
    pub strategy: Option<String>,
}

impl IoArgoprojWorkflowV1alpha1VolumeClaimGc {
    /// VolumeClaimGC describes how to delete volumes from completed Workflows
    pub fn new() -> IoArgoprojWorkflowV1alpha1VolumeClaimGc {
        IoArgoprojWorkflowV1alpha1VolumeClaimGc {
            strategy: None,
        }
    }
}

