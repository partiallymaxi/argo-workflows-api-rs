/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoK8sApiCoreV1HostAlias : HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoK8sApiCoreV1HostAlias {
    /// Hostnames for the above IP address.
    #[serde(rename = "hostnames", skip_serializing_if = "Option::is_none")]
    pub hostnames: Option<Vec<String>>,
    /// IP address of the host file entry.
    #[serde(rename = "ip")]
    pub ip: String,
}

impl IoK8sApiCoreV1HostAlias {
    /// HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
    pub fn new(ip: String) -> IoK8sApiCoreV1HostAlias {
        IoK8sApiCoreV1HostAlias {
            hostnames: None,
            ip,
        }
    }
}

