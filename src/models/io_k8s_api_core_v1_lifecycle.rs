/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoK8sApiCoreV1Lifecycle : Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoK8sApiCoreV1Lifecycle {
    #[serde(rename = "postStart", skip_serializing_if = "Option::is_none")]
    pub post_start: Option<Box<models::IoK8sApiCoreV1LifecycleHandler>>,
    #[serde(rename = "preStop", skip_serializing_if = "Option::is_none")]
    pub pre_stop: Option<Box<models::IoK8sApiCoreV1LifecycleHandler>>,
    /// StopSignal defines which signal will be sent to a container when it is being stopped. If not specified, the default is defined by the container runtime in use. StopSignal can only be set for Pods with a non-empty .spec.os.name
    #[serde(rename = "stopSignal", skip_serializing_if = "Option::is_none")]
    pub stop_signal: Option<String>,
}

impl IoK8sApiCoreV1Lifecycle {
    /// Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
    pub fn new() -> IoK8sApiCoreV1Lifecycle {
        IoK8sApiCoreV1Lifecycle {
            post_start: None,
            pre_stop: None,
            stop_signal: None,
        }
    }
}

