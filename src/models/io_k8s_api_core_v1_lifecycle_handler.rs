/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoK8sApiCoreV1LifecycleHandler : LifecycleHandler defines a specific action that should be taken in a lifecycle hook. One and only one of the fields, except TCPSocket must be specified.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoK8sApiCoreV1LifecycleHandler {
    #[serde(rename = "exec", skip_serializing_if = "Option::is_none")]
    pub exec: Option<Box<models::IoK8sApiCoreV1ExecAction>>,
    #[serde(rename = "httpGet", skip_serializing_if = "Option::is_none")]
    pub http_get: Option<Box<models::IoK8sApiCoreV1HttpGetAction>>,
    #[serde(rename = "sleep", skip_serializing_if = "Option::is_none")]
    pub sleep: Option<Box<models::IoK8sApiCoreV1SleepAction>>,
    #[serde(rename = "tcpSocket", skip_serializing_if = "Option::is_none")]
    pub tcp_socket: Option<Box<models::IoK8sApiCoreV1TcpSocketAction>>,
}

impl IoK8sApiCoreV1LifecycleHandler {
    /// LifecycleHandler defines a specific action that should be taken in a lifecycle hook. One and only one of the fields, except TCPSocket must be specified.
    pub fn new() -> IoK8sApiCoreV1LifecycleHandler {
        IoK8sApiCoreV1LifecycleHandler {
            exec: None,
            http_get: None,
            sleep: None,
            tcp_socket: None,
        }
    }
}

