/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoK8sApiCoreV1LocalObjectReference : LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoK8sApiCoreV1LocalObjectReference {
    /// Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl IoK8sApiCoreV1LocalObjectReference {
    /// LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
    pub fn new() -> IoK8sApiCoreV1LocalObjectReference {
        IoK8sApiCoreV1LocalObjectReference {
            name: None,
        }
    }
}

