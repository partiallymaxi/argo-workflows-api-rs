/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoK8sApiCoreV1PodDnsConfig : PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoK8sApiCoreV1PodDnsConfig {
    /// A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
    #[serde(rename = "nameservers", skip_serializing_if = "Option::is_none")]
    pub nameservers: Option<Vec<String>>,
    /// A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
    #[serde(rename = "options", skip_serializing_if = "Option::is_none")]
    pub options: Option<Vec<models::IoK8sApiCoreV1PodDnsConfigOption>>,
    /// A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
    #[serde(rename = "searches", skip_serializing_if = "Option::is_none")]
    pub searches: Option<Vec<String>>,
}

impl IoK8sApiCoreV1PodDnsConfig {
    /// PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.
    pub fn new() -> IoK8sApiCoreV1PodDnsConfig {
        IoK8sApiCoreV1PodDnsConfig {
            nameservers: None,
            options: None,
            searches: None,
        }
    }
}

