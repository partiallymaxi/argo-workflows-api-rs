/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoK8sApiCoreV1WeightedPodAffinityTerm : The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoK8sApiCoreV1WeightedPodAffinityTerm {
    #[serde(rename = "podAffinityTerm")]
    pub pod_affinity_term: Box<models::IoK8sApiCoreV1PodAffinityTerm>,
    /// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    #[serde(rename = "weight")]
    pub weight: i32,
}

impl IoK8sApiCoreV1WeightedPodAffinityTerm {
    /// The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
    pub fn new(pod_affinity_term: models::IoK8sApiCoreV1PodAffinityTerm, weight: i32) -> IoK8sApiCoreV1WeightedPodAffinityTerm {
        IoK8sApiCoreV1WeightedPodAffinityTerm {
            pod_affinity_term: Box::new(pod_affinity_term),
            weight,
        }
    }
}

