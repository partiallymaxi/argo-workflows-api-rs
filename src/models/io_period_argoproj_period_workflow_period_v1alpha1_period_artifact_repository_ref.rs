/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodArtifactRepositoryRef {
    /// The name of the config map. Defaults to \"artifact-repositories\".
    #[serde(rename = "configMap", skip_serializing_if = "Option::is_none")]
    pub config_map: Option<String>,
    /// The config map key. Defaults to the value of the \"workflows.argoproj.io/default-artifact-repository\" annotation.
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
}

impl IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodArtifactRepositoryRef {
    pub fn new() -> IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodArtifactRepositoryRef {
        IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodArtifactRepositoryRef {
            config_map: None,
            key: None,
        }
    }
}

