/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodGcsArtifact : GCSArtifact is the location of a GCS artifact
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodGcsArtifact {
    /// Bucket is the name of the bucket
    #[serde(rename = "bucket", skip_serializing_if = "Option::is_none")]
    pub bucket: Option<String>,
    /// Key is the path in the bucket where the artifact resides
    #[serde(rename = "key")]
    pub key: String,
    #[serde(rename = "serviceAccountKeySecret", skip_serializing_if = "Option::is_none")]
    pub service_account_key_secret: Option<Box<models::IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodSecretKeySelector>>,
}

impl IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodGcsArtifact {
    /// GCSArtifact is the location of a GCS artifact
    pub fn new(key: String) -> IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodGcsArtifact {
        IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodGcsArtifact {
            bucket: None,
            key,
            service_account_key_secret: None,
        }
    }
}

