/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodHeader : Header indicate a key-value request header to be used when fetching artifacts over HTTP
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodHeader {
    /// Name is the header name
    #[serde(rename = "name")]
    pub name: String,
    /// Value is the literal value to use for the header
    #[serde(rename = "value")]
    pub value: String,
}

impl IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodHeader {
    /// Header indicate a key-value request header to be used when fetching artifacts over HTTP
    pub fn new(name: String, value: String) -> IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodHeader {
        IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodHeader {
            name,
            value,
        }
    }
}

