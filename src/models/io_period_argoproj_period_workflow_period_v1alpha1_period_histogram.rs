/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodHistogram : Histogram is a Histogram prometheus metric
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodHistogram {
    /// Buckets is a list of bucket divisors for the histogram
    #[serde(rename = "buckets")]
    pub buckets: Vec<f64>,
    /// Value is the value of the metric
    #[serde(rename = "value")]
    pub value: String,
}

impl IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodHistogram {
    /// Histogram is a Histogram prometheus metric
    pub fn new(buckets: Vec<f64>, value: String) -> IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodHistogram {
        IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodHistogram {
            buckets,
            value,
        }
    }
}

