/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodHttpHeader {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
    #[serde(rename = "valueFrom", skip_serializing_if = "Option::is_none")]
    pub value_from: Option<Box<models::IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodHttpHeaderSource>>,
}

impl IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodHttpHeader {
    pub fn new(name: String) -> IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodHttpHeader {
        IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodHttpHeader {
            name,
            value: None,
            value_from: None,
        }
    }
}

