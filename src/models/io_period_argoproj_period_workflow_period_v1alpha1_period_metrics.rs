/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodMetrics : Metrics are a list of metrics emitted from a Workflow/Template
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodMetrics {
    /// Prometheus is a list of prometheus metrics to be emitted
    #[serde(rename = "prometheus")]
    pub prometheus: Vec<models::IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodPrometheus>,
}

impl IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodMetrics {
    /// Metrics are a list of metrics emitted from a Workflow/Template
    pub fn new(prometheus: Vec<models::IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodPrometheus>) -> IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodMetrics {
        IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodMetrics {
            prometheus,
        }
    }
}

