/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodRetryAffinity : RetryAffinity prevents running steps on the same host.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodRetryAffinity {
    /// RetryNodeAntiAffinity is a placeholder for future expansion, only empty nodeAntiAffinity is allowed. In order to prevent running steps on the same host, it uses \"kubernetes.io/hostname\".
    #[serde(rename = "nodeAntiAffinity", skip_serializing_if = "Option::is_none")]
    pub node_anti_affinity: Option<serde_json::Value>,
}

impl IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodRetryAffinity {
    /// RetryAffinity prevents running steps on the same host.
    pub fn new() -> IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodRetryAffinity {
        IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodRetryAffinity {
            node_anti_affinity: None,
        }
    }
}

