/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodSequence : Sequence expands a workflow step into numeric range
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodSequence {
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<String>,
    #[serde(rename = "end", skip_serializing_if = "Option::is_none")]
    pub end: Option<String>,
    /// Format is a printf format string to format the value in the sequence
    #[serde(rename = "format", skip_serializing_if = "Option::is_none")]
    pub format: Option<String>,
    #[serde(rename = "start", skip_serializing_if = "Option::is_none")]
    pub start: Option<String>,
}

impl IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodSequence {
    /// Sequence expands a workflow step into numeric range
    pub fn new() -> IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodSequence {
        IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodSequence {
            count: None,
            end: None,
            format: None,
            start: None,
        }
    }
}

