/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodSynchronization : Synchronization holds synchronization lock configuration
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodSynchronization {
    #[serde(rename = "mutex", skip_serializing_if = "Option::is_none")]
    pub mutex: Option<Box<models::IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodMutex>>,
    /// v3.6 and after: Mutexes holds the list of Mutex lock details
    #[serde(rename = "mutexes", skip_serializing_if = "Option::is_none")]
    pub mutexes: Option<Vec<models::IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodMutex>>,
    #[serde(rename = "semaphore", skip_serializing_if = "Option::is_none")]
    pub semaphore: Option<Box<models::IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodSemaphoreRef>>,
    /// v3.6 and after: Semaphores holds the list of Semaphores configuration
    #[serde(rename = "semaphores", skip_serializing_if = "Option::is_none")]
    pub semaphores: Option<Vec<models::IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodSemaphoreRef>>,
}

impl IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodSynchronization {
    /// Synchronization holds synchronization lock configuration
    pub fn new() -> IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodSynchronization {
        IoPeriodArgoprojPeriodWorkflowPeriodV1alpha1PeriodSynchronization {
            mutex: None,
            mutexes: None,
            semaphore: None,
            semaphores: None,
        }
    }
}

