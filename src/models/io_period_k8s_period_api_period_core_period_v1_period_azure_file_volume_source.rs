/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodAzureFileVolumeSource : AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodAzureFileVolumeSource {
    /// readOnly defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    #[serde(rename = "readOnly", skip_serializing_if = "Option::is_none")]
    pub read_only: Option<bool>,
    /// secretName is the  name of secret that contains Azure Storage Account Name and Key
    #[serde(rename = "secretName")]
    pub secret_name: String,
    /// shareName is the azure share Name
    #[serde(rename = "shareName")]
    pub share_name: String,
}

impl IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodAzureFileVolumeSource {
    /// AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
    pub fn new(secret_name: String, share_name: String) -> IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodAzureFileVolumeSource {
        IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodAzureFileVolumeSource {
            read_only: None,
            secret_name,
            share_name,
        }
    }
}

