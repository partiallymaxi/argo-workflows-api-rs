/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodConfigMapKeySelector : Selects a key from a ConfigMap.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodConfigMapKeySelector {
    /// The key to select.
    #[serde(rename = "key")]
    pub key: String,
    /// Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Specify whether the ConfigMap or its key must be defined
    #[serde(rename = "optional", skip_serializing_if = "Option::is_none")]
    pub optional: Option<bool>,
}

impl IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodConfigMapKeySelector {
    /// Selects a key from a ConfigMap.
    pub fn new(key: String) -> IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodConfigMapKeySelector {
        IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodConfigMapKeySelector {
            key,
            name: None,
            optional: None,
        }
    }
}

