/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodEventSource : EventSource contains information for an event.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodEventSource {
    /// Component from which the event is generated.
    #[serde(rename = "component", skip_serializing_if = "Option::is_none")]
    pub component: Option<String>,
    /// Node name on which the event is generated.
    #[serde(rename = "host", skip_serializing_if = "Option::is_none")]
    pub host: Option<String>,
}

impl IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodEventSource {
    /// EventSource contains information for an event.
    pub fn new() -> IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodEventSource {
        IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodEventSource {
            component: None,
            host: None,
        }
    }
}

