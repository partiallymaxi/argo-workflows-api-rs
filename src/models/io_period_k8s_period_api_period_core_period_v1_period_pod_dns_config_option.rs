/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodPodDnsConfigOption : PodDNSConfigOption defines DNS resolver options of a pod.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodPodDnsConfigOption {
    /// Name is this DNS resolver option's name. Required.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Value is this DNS resolver option's value.
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
}

impl IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodPodDnsConfigOption {
    /// PodDNSConfigOption defines DNS resolver options of a pod.
    pub fn new() -> IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodPodDnsConfigOption {
        IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodPodDnsConfigOption {
            name: None,
            value: None,
        }
    }
}

