/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodScaleIoVolumeSource : ScaleIOVolumeSource represents a persistent ScaleIO volume
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodScaleIoVolumeSource {
    /// fsType is the filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".
    #[serde(rename = "fsType", skip_serializing_if = "Option::is_none")]
    pub fs_type: Option<String>,
    /// gateway is the host address of the ScaleIO API Gateway.
    #[serde(rename = "gateway")]
    pub gateway: String,
    /// protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
    #[serde(rename = "protectionDomain", skip_serializing_if = "Option::is_none")]
    pub protection_domain: Option<String>,
    /// readOnly Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    #[serde(rename = "readOnly", skip_serializing_if = "Option::is_none")]
    pub read_only: Option<bool>,
    #[serde(rename = "secretRef")]
    pub secret_ref: Box<models::IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodLocalObjectReference>,
    /// sslEnabled Flag enable/disable SSL communication with Gateway, default false
    #[serde(rename = "sslEnabled", skip_serializing_if = "Option::is_none")]
    pub ssl_enabled: Option<bool>,
    /// storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
    #[serde(rename = "storageMode", skip_serializing_if = "Option::is_none")]
    pub storage_mode: Option<String>,
    /// storagePool is the ScaleIO Storage Pool associated with the protection domain.
    #[serde(rename = "storagePool", skip_serializing_if = "Option::is_none")]
    pub storage_pool: Option<String>,
    /// system is the name of the storage system as configured in ScaleIO.
    #[serde(rename = "system")]
    pub system: String,
    /// volumeName is the name of a volume already created in the ScaleIO system that is associated with this volume source.
    #[serde(rename = "volumeName", skip_serializing_if = "Option::is_none")]
    pub volume_name: Option<String>,
}

impl IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodScaleIoVolumeSource {
    /// ScaleIOVolumeSource represents a persistent ScaleIO volume
    pub fn new(gateway: String, secret_ref: models::IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodLocalObjectReference, system: String) -> IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodScaleIoVolumeSource {
        IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodScaleIoVolumeSource {
            fs_type: None,
            gateway,
            protection_domain: None,
            read_only: None,
            secret_ref: Box::new(secret_ref),
            ssl_enabled: None,
            storage_mode: None,
            storage_pool: None,
            system,
            volume_name: None,
        }
    }
}

