/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodSeLinuxOptions : SELinuxOptions are the labels to be applied to the container
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodSeLinuxOptions {
    /// Level is SELinux level label that applies to the container.
    #[serde(rename = "level", skip_serializing_if = "Option::is_none")]
    pub level: Option<String>,
    /// Role is a SELinux role label that applies to the container.
    #[serde(rename = "role", skip_serializing_if = "Option::is_none")]
    pub role: Option<String>,
    /// Type is a SELinux type label that applies to the container.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    /// User is a SELinux user label that applies to the container.
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<String>,
}

impl IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodSeLinuxOptions {
    /// SELinuxOptions are the labels to be applied to the container
    pub fn new() -> IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodSeLinuxOptions {
        IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodSeLinuxOptions {
            level: None,
            role: None,
            r#type: None,
            user: None,
        }
    }
}

