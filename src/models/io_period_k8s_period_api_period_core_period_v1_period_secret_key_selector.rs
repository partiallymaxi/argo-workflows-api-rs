/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodSecretKeySelector : SecretKeySelector selects a key of a Secret.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodSecretKeySelector {
    /// The key of the secret to select from.  Must be a valid secret key.
    #[serde(rename = "key")]
    pub key: String,
    /// Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Specify whether the Secret or its key must be defined
    #[serde(rename = "optional", skip_serializing_if = "Option::is_none")]
    pub optional: Option<bool>,
}

impl IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodSecretKeySelector {
    /// SecretKeySelector selects a key of a Secret.
    pub fn new(key: String) -> IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodSecretKeySelector {
        IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodSecretKeySelector {
            key,
            name: None,
            optional: None,
        }
    }
}

