/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodTypedLocalObjectReference : TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodTypedLocalObjectReference {
    /// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
    #[serde(rename = "apiGroup", skip_serializing_if = "Option::is_none")]
    pub api_group: Option<String>,
    /// Kind is the type of resource being referenced
    #[serde(rename = "kind")]
    pub kind: String,
    /// Name is the name of resource being referenced
    #[serde(rename = "name")]
    pub name: String,
}

impl IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodTypedLocalObjectReference {
    /// TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.
    pub fn new(kind: String, name: String) -> IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodTypedLocalObjectReference {
        IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodTypedLocalObjectReference {
            api_group: None,
            kind,
            name,
        }
    }
}

