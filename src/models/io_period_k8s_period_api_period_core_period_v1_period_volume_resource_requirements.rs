/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodVolumeResourceRequirements : VolumeResourceRequirements describes the storage resource requirements for a volume.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodVolumeResourceRequirements {
    /// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    #[serde(rename = "limits", skip_serializing_if = "Option::is_none")]
    pub limits: Option<std::collections::HashMap<String, String>>,
    /// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    #[serde(rename = "requests", skip_serializing_if = "Option::is_none")]
    pub requests: Option<std::collections::HashMap<String, String>>,
}

impl IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodVolumeResourceRequirements {
    /// VolumeResourceRequirements describes the storage resource requirements for a volume.
    pub fn new() -> IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodVolumeResourceRequirements {
        IoPeriodK8sPeriodApiPeriodCorePeriodV1PeriodVolumeResourceRequirements {
            limits: None,
            requests: None,
        }
    }
}

