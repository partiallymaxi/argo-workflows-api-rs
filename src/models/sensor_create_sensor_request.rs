/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SensorCreateSensorRequest {
    #[serde(rename = "createOptions", skip_serializing_if = "Option::is_none")]
    pub create_options: Option<Box<models::IoK8sApimachineryPkgApisMetaV1CreateOptions>>,
    #[serde(rename = "namespace", skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
    #[serde(rename = "sensor", skip_serializing_if = "Option::is_none")]
    pub sensor: Option<Box<models::GithubComArgoprojArgoEventsPkgApisEventsV1alpha1Sensor>>,
}

impl SensorCreateSensorRequest {
    pub fn new() -> SensorCreateSensorRequest {
        SensorCreateSensorRequest {
            create_options: None,
            namespace: None,
            sensor: None,
        }
    }
}

