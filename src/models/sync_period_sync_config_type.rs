/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/latest/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SyncPeriodSyncConfigType {
    #[serde(rename = "CONFIGMAP")]
    Configmap,
    #[serde(rename = "DATABASE")]
    Database,

}

impl std::fmt::Display for SyncPeriodSyncConfigType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Configmap => write!(f, "CONFIGMAP"),
            Self::Database => write!(f, "DATABASE"),
        }
    }
}

impl Default for SyncPeriodSyncConfigType {
    fn default() -> SyncPeriodSyncConfigType {
        Self::Configmap
    }
}

